name: Docker Vulnerability & Security Report

on:
  push:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      # 1. Build Docker image
      - name: Build Docker Image
        run: docker build -t my-custom-app:latest ./docker

      # 2. Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      # 3. Run Trivy Scan â†’ JSON report
      - name: Run Trivy Docker Scan
        run: trivy image --ignore-unfixed --exit-code 0 --format json --output reports/trivy.json my-custom-app:latest

      # 4. Install Docker Scout (Container security insights)
      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh

          docker scout quickview
          docker scout cves

      # 5. Install Bandit (Python SAST for app source code)
      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Scan
        run: bandit -r docker/app/ -f json -o reports/bandit.json

      # 6. MITRE ATT&CK Simulation (Atomic Red Team)
      - name: Run Atomic Red Team (MITRE ATT&CK)
        run: |
          sudo apt-get install -y powershell
          git clone https://github.com/redcanaryco/atomic-red-team.git
          # Example: simulate credential dumping (T1003)
          pwsh -Command "Import-Module ./atomic-red-team/Invoke-AtomicRedTeam.psd1; Invoke-AtomicTest T1003 -ShowDetails | Out-File -FilePath reports/mitre_T1003.json"

      # 7. Set up Python environment for PDF generation
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install PyPDF2 reportlab matplotlib

      # 8. Map NIST CSF categories (using JSON from Trivy/Bandit/ZAP/Scout)
      - name: Map Results to NIST CSF
        run: |
          python scripts/mappings.py reports/ nist_report.json

      # 9. Generate Charts (Optional)
      - name: Generate Charts
        run: python scripts/gen_charts.py

      # 10. Generate PDF Report
      - name: Generate PDF Report
        run: python scripts/generate_report.py

      # 11. Upload PDF Report
      - name: Upload PDF Report
        uses: actions/upload-artifact@v4
        with:
          name: docker-vulnerability-report
          path: report.pdf

      # 12. Upload JSON Reports (Optional)
      - name: Upload JSON Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: json-reports
          path: reports/
